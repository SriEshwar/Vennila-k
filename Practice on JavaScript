 
console.log("This is console logging");
//alerting
alert("this is a alert message");


//--------------------COMMANDS----------------------
// single line command --> //
//  multiline command --> /* */


//--------------------VARIABLES----------------------

//VARIABLE KEYWORDS:
// 1. var --> supports in all versions including old versions
var empname="vennila";
var Age=19;
{
    var Age=20;
}
console.log(Age);    //o/p=20

// 2. let --> introduced in 2015 
let empId=10;
let Age=100;
{
    let Age=200;
}
console.log(Age);   //o/p=100

// 3. const --> introduced in 2015. [note : variables declared with const cannot be changed.]
const salary=2000.56;
// 4. without keyword
salary=10+5;

// concatenation of variabLE:
alert("my name is "+empName);
let message="console msg with name"+ empName;
console.log(message);

// naming conventions fo variables ----> similar to c.
// NOTE : default value of variabe --> "undefined".


/*feature     var    let    const
scope      function  block   block
hoisting   yes       no      no
reassign   yes       yes     no
redeclare  yes        no      no
*/


//----------------------DATATYPES---------------------
/* datatypes are classified into two types :
* PRIMITIVE DATATYPES :                  * NON-PRIMITIVE DATATYPES :
    ->string                                  ->objects
    ->integer                                 ->funtions
    ->boolean                                 ->arrays
    ->null
    ->undefined
*/
let empName="hello"; //string let old version 
let employeeId=20; //integer
let Age=undefined; //undefined
Age=90; // we can reassign the undefined variables.
let Age; //undefined
let Address=null; // this specifies that as of now no value is assigned. we can reassign the values.
Address="chennai";



//---------------------OBJECTS IN JS------------------------

let person = {};    //empty object
//multiple property objects syntax :

let  Exampleobject = {
    carname : "toyota",
    colour : "black",
    insurance : true,
    number : 124
};
console.log(Exampleobject); //shows all the properties inside obj
console.log(Exampleobject.number);
console.log(Exampleobject["carname"]);

let Banking ={
   Bankname : "SBI",
    Address : "COIMABTORE",
    Loan : {
        loanforgold : 12309,
        loanforhouse: 67890
    }
};
console.log(Banking);
console.log(Banking.Loan);
console.log(Banking.Loan.loanforgold);

/*
----------------------------JAVASCIPT OPERATORS----------------------   */

console.log("operators");
console.log(2**3); //2^3=8
console.log(2===3);
console.log(2!==3);
console.log("hi"==="hi");
console.log("aa">"bb");
console.log("1"<6); //automatically convert string to int and then check.
console.log(true || false);
console.log("true" || "false"); //output: false;
console.log("false" || "");//output: false



//-----------------------------CONDITIONAL STATEMENTS(IF-ELSE,SWITCH CASE) -------------------------------------
 if("Hot"=="hot")
 {
    console.log("whether is hot!!");
 }
 else
 console.log("whether is cool!!");

 let date=new Date();
 console.log(date);
 console.log(date.getHours());



 //----------------------------------------ARRAYS------------------------------------------------------------

 //* 1. Using array literal :
 let employeename=["teena","raju","ram"]; //empty array
 console.log(employeename);//prints all the elements
 console.log(employeename[0]);//prints the value for particular element in the specfied index

 //* 2.By creating instance of array(using new keyword)
 let employeeid=new Array(5);
 console.log(employeeid);

// ARRAY METHODS:

employeeid.sort();
console.log(employeeid);
employeeid.fill(1);
console.log(employeeid);
let newlength=employeeid.push(10);
console.log(newlength);
console.log(employeeid);
let removelast=employeeid.pop();
console.log(removelast);


//---------------------------------------STRINGS----------------------------------------------------------------


let empName="Vennila";
console.log("slice method-->" + empName.slice(1,3));
console.log("slice method reverse-->" +empName.slice(-5)); //prints from last k characters
console.log("substr method-->"+ empName.substr(1,4));//prints from starting index till k characters.
console.log("string upper = " + empName.toUpperCase());
console.log("string lower = " +empName.toLowerCase());



 //-------------------------------LOOPING STATEMENTS-------------------------------------------------------------
for(let index in employeeid)
{
console.log(index);  //prints the index
}

for(let index of empName)
{
console.log(index);  //prints the elements 
}


//------------------------------------- CALLBACK FUNCTION--------------------------------------------------

function Employee(callback) {
    console.log("hiiiiii");
    callback();
}
function empName()
{
console.log("hello");
}

Employee(empName)



//-------------------------------------Error handling-------------------------------------

 try{
    let empexperience=5; //not a number
    if(isNaN(empexperience))
    throw 'please enter valid number'; //throws to catch block
    console.log(empexperience*2);
}
catch(err){
  console.log(err);
}
finally{
    console.log('finally block');
} 

//----------------------------Synchronous vs asynchronous JS------------------------------

console.log('step 1 sync');
console.log('step2 sync');
console.log('step 3sync');
setTimeout(()=>console.log('step 1 async'),4000); //takes minimum 4 sec foe execution
setTimeout(()=>console.log('step 2 async'),2000);


function greet(name,callback) {
    console.log("greet")
    setTimeout(()=>callback("hello" +name),3000); 
}
 function display(empname) {
    console.log(empname);
 }
greet("raj",display);


//SetInterval
function greet(name,callback) {
    console.log("greet")
    setInterval(()=>callback("hello " +name),3000); 
   
}
 function display(params) {
    console.log(params);
 }
greet("raj",display);


//-------------------------------------------PROMISE----------------------------------------

let promise = new Promise((resolve,reject)=>{    
    let success=true;
    if(success)
    resolve('hi you won')
    else 
    reject('you lost')
})


function promise()
{
    return new Promise((resolve,reject)=>{
        let success=false;
    if(success)
    setTimeout(resolve,1000,500); //(function,delay,func parameter)
    else 
    setTimeout(reject,2000,0);  //asynchronous operations
    })
}


//---------------------------------------------Async and Await---------------------------------------


let ticketBooking= new Promise((resolve,reject)=>{    
    let success=false; //if we give false it will show error.so to handle reject we need to use try catch
    if(success)
    setTimeout(resolve,2000,'hi your ticket is booked')
    else 
    reject('No ticket')
})

async function asyncstatus()
{
    try{
         console.log('async and await');
        result =  await ticketBooking
        console.log(result);
        }
    catch(err)
    {
        console.log(err);
    }
        
}

asyncstatus()   //async function only executes after the function call

//-----------------------------------------JSON------------------------------------------

let employeeDetails={
    "name":"sowndarya",
    "details":{
        "age":21,
        "address":"cbe"
    }
}
console.log(employeeDetails.name);
console.log(employeeDetails);
console.log(employeeDetails.details);

//array of json objects:

let employeeDetails=[
    {
        "name":"sowndarya",
        "details":{
            "age":21,
            "address":"cbe"
        }
    },
        {
            "name":"sneha",
            "details":{
                "age":21,
                "address":"cbe"
            }
        },
        {
            "name":"vennila",
            "details":{
                "age":21,
                "address":"cbe"
            }
        }
];
console.log(employeeDetails);
console.log(employeeDetails[1]);
console.log(employeeDetails[1].name);

//JSON.parse() --> converts string to json doc
let employeeDetails=`[
    {
        "name":"sowndarya",
        "details":{
            "age":21,
            "address":"cbe"
        }
    },
        {
            "name":"sneha",
            "details":{
                "age":21,
                "address":"cbe"
            }
        },
        {
            "name":"vennila",
            "details":{
                "age":21,
                "address":"cbe"
            }
        }
]`;
let employees=JSON.parse(employeeDetails);
console.log(employees);

//JSON.stringify --> converts json to string

let employeeDetails={
    "name":"sowndarya",
    "details":{
        "age":21,
        "address":"cbe"
    }
}
let employees=JSON.stringify(employeeDetails);
console.log(employees);


////-------------------------------map filter reduce --------------------------------------------------

const employeesId=[1,2,3,6,4];
const maparray=employeesId.map((element)=>{
return element*2
})

console.log(maparray);
