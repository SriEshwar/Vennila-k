Exception Propogation (throws)

 nested try

class Main{
public static void main(String args[]){
Scanner sc=new Scanner(System.in);
int num1,num2,result;
int []empId={2,3,4,5,6};
try{
num1=sc.nextInt();
num2=sc.nextInt();
result=num1/num2;
System.out.print(empId[7]);
}
catch(ArithmeticException exception)
{
Sytsem.out.print(exception.getMessage())
}
catch(ArrayIndextOutOfBoundsException exception)
{
Sytsem.out.print(exception.getMessage())
}
Sytsem.out.print("The program eds in here");
}
}



class Main{
public static void main(String args[]) throws InsufficientFundException{
Bank raj=new Bank();
raj.balance=1000;
try{
raj.withdraw(1500);
}
catch(){
}
}

class Bank{
double balance;
public void withdraw(double amount)throws InsufficientFundException
{
try{
if(this.balance>amount)
this.balance=this.balance-amount;
else
throw new InsufficientFundException("amount widthdraw is not possibile coz of limites amount in the balance");
}
}


class InsufficientFundException extends Exception{
String message="";
InsufficientFundException (String exceptionMessage){
this.message=exceptionMessage;
}
String getMessage(){
return this.message;
}

/******************************************************************************

                          can we use more than one finally block for try block
*******************************************************************************/
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
        int []empId={2,3,4,5,6};
        try{
           System.out.print("employee 7 id",empId[7]);
        }
        finally{
		System.out.println("Hello Raj");}
		finally{
		        System.out.print("this is your employee id ");
		    }
		}
	
}

Compilation failed due to following error(s).Main.java:19: error: 'finally' without 'try'
		    finally{
		    ^
1 error





*******************************************************************************/can we use finally block with try
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    String message="Hii";
	    try {
    System.out.println(message.charAt(5));
} finally {
    System.out.println("Inside finally");
}
}
	
